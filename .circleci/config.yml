version: 2.1
executors:
  main:
    docker:
      - image: 'circleci/node:10'

jobs:
  install_dependencies:
    executor: main
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - node-v1-{{ .Branch }}-
            - node-v1-
      - run: npm i
      - save_cache:
          paths:
            - ./node_modules
          key: node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
  build:
    executor: main
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run:
          name: Building static site
          command: npm run build
      - persist_to_workspace:
          root: public
          paths:
            - "*"
  test:
    executor: main
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run:
          name: Linting javascript
          command: npm run lint
      - run:
          name: Running automated tests
          command: npm test
  deploy:
    executor: main
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - attach_workspace:
          at: public
      - run:
          name: Remove netlify admin
          command: |
                rm -rf public/admin
      - add_ssh_keys:
          fingerprints:
            - "07:39:26:3f:6d:21:0d:8b:76:ef:fa:4a:0b:e9:5c:2c"
      - run:
          name: Setup git config
          command: |
                git config user.email "ci-build@lewnelson.com"
                git config user.name "ci-build"
      - run:
          name: Deploying to GitHub pages
          command: npm run deploy:ci

workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - install_dependencies:
          filters:
            branches:
              ignore:
                - gh-pages
      - build:
          requires:
            - install_dependencies
          filters:
            branches:
              ignore:
                - gh-pages
      - test:
          requires:
            - install_dependencies
          filters:
            branches:
              ignore:
                - gh-pages
      - deploy:
          requires:
            - build
            - test
          filters:
            branches:
              only:
                - master
              ignore:
                - gh-pages